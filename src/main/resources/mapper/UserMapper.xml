<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace用于指定当前xml和哪个接口映射，需要指定接口的文件路径，需要标注出来-->
<mapper namespace="com.cy.store.Mapper.UserMapper">

    <!--自定义映射规则-->
    <!--resultmap-->
    <!--ID表示给这个映射规则分配一个唯一的id值,type表示查询结果与哪一个实体类进行结果集的映射   -->
    <resultMap id="UserEntityMap" type="com.cy.store.entity.User">
     <!--该处映射结果集和实体类,属性与表中字段不同的才需要映射-->
        <!--主键不可以省略-->
        <id column="uid" property="uid"></id>
        <result column="username" property="userName"></result>
        <result column="password" property="passWord"></result>
        <result column="created_user " property="createdUser"></result>
        <result column="created_time " property="createdTime"></result>
        <result column="modified_user " property="modifiedUser"></result>
        <result column="modified_time " property="modifiedTime"></result>
        <result column="is_delete " property="isDelete"></result>
    </resultMap>
    <!--==========================================================================================-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid"> /*开启主键自增，因为这个字段在数据库就是自增的*/
    /*id的值表示映射的接口的方法的名称*/
    /*方法通过接口来关联进来*/
    insert into t_user (username, password,
                        salt, phone, email, gender,
                        avatar, is_delete, created_user,
                        created_time, modified_user,
                        modified_time)
    values (#{userName}, #{passWord},
            #{salt}, #{phone}, #{email}, #{gender},
            #{avatar}, #{isDelete}, #{createdUser},
            #{createdTime}, #{modifiedUser},
            #{modifiedTime})
    /*value中的动态参数名称要和实体类中参数的名称一样*/
    </insert>

    <!--查询结果是一个对象-->
    <!--指定ResultType:表示查询的结果集的类型，只需要指定对应的映射的类型
           ResultMap:表的字段和属性不一致的时候使用;
    -->
    <select id="findByUsername" resultMap="UserEntityMap">/*对应上面的resultMap映射方法*/
        select * from t_user where username = #{userName};
    </select>

    <!--根据用户名称删除用户的方法-->
    <delete id="deleteByUserName">
        delete from t_user where username = #{userName};
    </delete>

    <!--用户列表查询-->
    <select id="showUsers" resultMap="UserEntityMap">
        select * from t_user;
    </select>
</mapper>